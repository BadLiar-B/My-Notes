new 操作符具体做了什么？ 
1、先创建一个空对象 
2、把空对象和构造函数通过原型链进行链接 
3、把构造函数的 this 绑定到新的空对象身上 
4、根据构建函数返回的类型判断，如果是值类型，则返回对象，如果是引用类型，就要返回这个引用类型


传统的构造函数的问题：
原型和原型方法定义分离，降低了可读性
原型成员可以被枚举
默认情况下，构造函数仍然可以被当做普通函数使用

类的特点：（class 创建类）
类声明不会被提升，与 let 和 const 一样，存在暂时性死区
类中的所有代码均在 严格模式 下执行
类的所有方法是 不可枚举 的
类的所有方法都无法被当作构造函数使用
类的构造器必须使用 new 来调用



一、JavaScript 中的内置构造函数（10种）：
Object() 构造函数：用于创建对象。
Array() 构造函数：用于创建数组。
Number() 构造函数：用于创建数字对象。
String() 构造函数：用于创建字符串对象。
Boolean() 构造函数：用于创建布尔对象。
Function() 构造函数：用于创建函数对象。
Error() 构造函数：用于创建错误对象。
Date() 构造函数：用于创建日期对象。
Math() 构造函数：用于执行数学任务的静态方法和属性的集合。
RegExp() 构造函数：用于创建正则表达式。

二、其他常见的构造函数：
FormData() 构造函数：用于在客户端创建表单数据，FormData 对象可以包含多个键值对，每个键值对都对应一个表单字段，其中键是字段的名称，值是字段的值。
FileReader() 构造函数：用于读取本地文件中的数据。
Blob() 和 File() 构造函数：用于创建二进制数据对象，可用于将数据上传到服务器或从服务器下载数据。
Map() 构造函数：用于创建一个映射，其中包含键值对。
Set() 构造函数：用于创建一个集合，其中包含唯一的值。
Promise() 构造函数：用于封装异步操作的结果。

ArrayBuffer() 构造函数：用于创建一个容纳二进制数据的缓冲区。
DataView() 构造函数：用于在 ArrayBuffer 中读取和写入二进制数据。
Int8Array()、Uint8Array()、Int16Array()、Uint16Array()、Int32Array()、Uint32Array()、Float32Array() 和 Float64Array() 构造函数：用于创建不同类型的数组视图，以便在 ArrayBuffer 中读取和写入二进制数据。
Image() 构造函数：用于创建一个图像对象，可用于在网页中显示图像。
Audio() 和 Video() 构造函数：用于创建音频和视频元素，可用于在网页中播放音频和视频。
Worker() 构造函数：用于创建一个 Web Worker 线程，使 JavaScript 能够在后台执行长时间运行的任务，而不会阻塞用户界面。
URL() 构造函数：用于解析和操作 URL 字符串。

三、其他的构造函数：
Symbol() 构造函数：用于创建唯一的符号值，用于对象属性的键。
BigInt() 构造函数：用于创建表示大整数的值。
WeakMap() 构造函数：用于创建一个弱映射，其中包含键值对，键是对象。
WeakSet() 构造函数：用于创建一个弱集合，其中包含对象的引用。
Proxy() 构造函数：用于创建一个代理对象，以便在对象上定义自定义行为。
Reflect() 构造函数：用于封装 JavaScript 的底层反射 API。
Map.prototype 和 Set.prototype 中的其他构造函数，例如 Map.prototype.entries()、Map.prototype.keys()、Map.prototype.values()、Set.prototype.add()、Set.prototype.delete() 等。


