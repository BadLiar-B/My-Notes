面试题：从一个 URL 地址到最终页面渲染完成，发生了什么？
	（补充：首先
	浏览器自动补全协议、端口，浏览器自动完成 url 编码
	浏览器根据 url 地址查找本地缓存，根据缓存规则看是否命中缓存，若命中缓存则直接使用缓存，不再发出请求
	）
	1.DNS 解析：（域名系统）Domain Name System
	将域名地址解析为 ip 地址的过程
                   - 先依次进行 浏览器、系统、路由器、网络运营商的 DNS 缓存
                   - 然后递归搜索：例如 blog.baidu.com
                      - .com 域名下查找 DNS 解析
                      - .baidu 域名下查找 DNS 解析
                      - blog 域名下查找 DNS 解析
                      - 出错了
	2. 建立TCP 连接：TCP 三次握手
                   - 第一次握手，由浏览器发起，告诉服务器我要发送请求了
                   - 第二次握手，由服务器发起，告诉浏览器我准备接收了，你赶紧发送吧
                   - 第三次握手，由浏览器发送，告诉服务器，我马上就发了，准备接收吧
	（补充：
	若使用了 HTTPS 协议，则还会进行 SSL 握手，建立加密信道。使用 SSL 握手时，会确定是否使用 HTTP2
	浏览器决定要附带哪些 cookie 到请求头中
	）
                  3.发送请求（浏览器自动设置好请求头、协议版本、cookie，发出 GET 请求）
                   - 请求报文：HTTP 协议的通信内容
                  4.接收响应（服务器处理请求，进入后端处理流程。完成处理后，服务器响应一个 HTTP 报文给浏览器）
                   - 响应报文
	（
	浏览器根据使用的协议版本，以及 Connection 字段的约定，决定是否要保留 TCP连接。
	浏览器根据响应状态码决定如何处理这一次响应
	）
                  5.渲染页面（浏览器根据响应头中的 Content-Type 字段识别响应类型）
                   - 遇见 HTML 标记，浏览器调用 HTML 解析器，解析成 Token 并构建成 dom 树
                   - 遇见 style/link 标记，浏览器调用 css 解析器，处理 css 标记并构建 cssom 树
                   - 遇见 script 标记，调用 JavaScript 解析器，处理 script 代码（绑定事件、修改 dom 树/ cssom 树）
                   - 将 dom 树和 cssom 树合并成一个渲染树（rendering tree）
                   - 根据渲染树来计算布局，计算每个节点的几何信息（布局）
                   - 将各个节点的颜色绘制到屏幕上（渲染）
                   注意：这五个步骤不一定按照顺序执行，如果 dom 树和 cssom 树被修改了，可能会执行多次布局和渲染。
		往往实际页面中，这些步骤都会执行多次的
                  6.断开TCP连接：TCP 四次挥手
                   - 第一次挥手：由浏览器发起的，发送给服务器，我东西发送完了（请求报文），你准备关闭吧
                   - 第二次挥手：由服务器发起的，告诉浏览器，我东西接收完了（请求报文），我准备关闭了，你也准备关闭吧
                   - 第三次挥手：由服务器发起的，告诉浏览器，我东西发送完了（响应报文），你准备关闭吧
                   - 第四次挥手：由浏览器发起的，告诉浏览器，我东西接收完了（响应报文），我准备关闭了，你也准备关闭吧



TCP 的三次握手：（TCP 协议通过三次握手建立可靠的点对点连接）
首先服务器进入监听状态，然后即可处理连接
第一次握手：建立连接时，客户端发送 syn 包到服务器，并进入 SYN_SEND 状态，等待服务器确认。在发送的包中还会包含一个初始序列号 seq。此次握手的含义是客户端希望与服务器建立连接。
SYN：同步序列编号 (Synchronize Sequence Numbers) 
第二次握手：服务器收到 syn 包，然后回应给客户端一个 SYN+ACK 包，此时服务器进入 SYN_RCVD 状态。此次握手的含义是服务端回应客户端，表示已收到并同意客户端的连接请求。
第三次握手：客户端收到服务器的 SYN＋ACK 包，向服务器发送确认 ACK 包，客户端和服务器进入 ESTAB_LISHED 状态（完成状态），完成三次握手
完成三次握手，客户端与服务器开始传送数据



TCP 的四次挥手：（需要关闭连接时，需要进行四次挥手才能关闭）
第一次挥手：Client 向 Server 发送 FIN 包，表示 Client 主动要关闭连接，然后进入 FIN_WAIT_1 状态，等待 Server 返回 ACK 包。此后 Client 不能再向 Server 发送数据，但能读取数据。
第二次挥手：Server 收到 FIN 包后向 Client 发送 ACK 包，然后进入 CLOSE_WAIT 状态，此后 Server 不能再读取数据，但可以继续向 Client 发送数据。
Client 收到 Server 返回的 ACK 包后进入 FIN_WAIT_2 状态，等待 Server 发送 FIN 包。
第三次挥手：Server 完成数据的发送后，将 FIN 包发送给 Client，然后进入 LAST_ACK 状态，等待 Client 返回 ACK 包，此后 Server 既不能读取数据，也不能发送数据。
第四次挥手：Client 收到 FIN 包后向 Server 发送 ACK 包，然后进入 TIME_WAIT 状态，接着等待足够长的时间（2MSL）以确保 Server 接收到 ACK 包，最后回到 CLOSED 状态，释放网络资源。完成四次挥手。


