vue 和 react 的优缺点
      监听数据变化的实现原理不同：
	Vue 通过 getter/setter 以及一些函数的劫持，能精确知道数据变化。
	React 默认是通过比较引用的方式（diff）进行的，如果不优化可能导致大量不必要的 VDOM 的重新渲染。

      vue 是双向数据绑定而 react 是单向数据流

      在组件通讯上的差别
	vue：
	父->子：通过props进行传递数据给子组件
	子->父：通过emit向父组件传值
	react：
	父->子：通过props将数据传递给子组件
	子->父：通过父组件向子组件传递函数，然后子组件中调用这些函数，利用回调函数实现数据传递

	在 Vue 中，可以通过查找父组件下的子组件实例，然后进行组件进行通信。如 this.$parent.$children，在 $children 中，可以通过组件的 name 找到要通信的组件，进而进行通信。
	在 React 中，需要现将数据传递给父组件，然后父组件再传递给兄弟组件。
	
	多层级通讯时，vue 可以通过 $parent 和 $ref 实现跨级通讯。
	react 中提供了一个和 Vue 类似的处理多层级组件通信的方式——context，这里会提供一个生产者和一个消费者，会在父组件中生产数据，在子组件中消费数据。
	从使用上来说，只需要将子组件包裹在生产者的 Provider 中，在需要用到数据的子组件中，通过 Consumer 包裹，就可以拿到生产者的数据。

      框架本质不同：
	Vue 本质是 MVVM 框架，由 MVC 发展而来；
	React 是前端组件化框架，由后端组件化发展而来。

vue 优点：
1. 简单：官方文档很清晰，比 Angular 简单易学。
2. 快速：异步批处理方式更新 DOM。
3、对模块友好：可以通过 NPM、Bower 或 Duo 安装
vue 缺点：
1. 新生儿：Vue.js 是一个新的项目，没有 angular 那么成熟。
2. 影响度不是很大：google 了一下，有关于 Vue.js 多样性或者说丰富性少于其他一些有名的库。

react 优点：
1. 速度快：在 UI 渲染过程中，React 通过在虚拟 DOM 中的微操作来实现对实际 DOM 的局部更新。
2. 跨浏览器兼容：虚拟 DOM 帮助我们解决了跨浏览器问题，它为我们提供了标准化的 API，甚至在 IE8 中都是没问题的。
4. 单向数据流：Flux 是一个用于在 JavaScript 应用中创建单向数据层的架构，它随着 React 视图库的开发而被 Facebook 概念化
6. 兼容性好：比如使用 RequireJS 来加载和打包，而 Browserify 和 Webpack 适用于构建大型应用。它们使得那些艰难的任务不再让人望而生畏
react 缺点：
React 本身只是一个 V 而已，并不是一个完整的框架，所以如果是大型项目想要一套完整的框架的话，基本都需要加上ReactRouter 和 Flux 才能写大型应用。