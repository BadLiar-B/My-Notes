一、ES6的新特性：
新增 let、const (声明变量) 都具有块级作用域，不存在变量提升的问题
class (创建类) 
import/export 实现导入导出（基于 ES6 的模块规范创建导入/导出模块(文件/组件)）
new set (数组去重)
Symbol (唯一的值)  var a = Symbol('qqq')
...ary (展开运算符、剩余运算符)
${} 模板字符串 
解构赋值  let {a} = obj; let [b] = ary
for of 循环 （迭代器的 iterator 语法糖）
()=>{} 箭头函数
数组新增方法：flat、find、findIndex
对象新增方法：Object.assign()  Object.values()  Object.keys()  Object.create()...
新增了 promise 解决回调地狱问题



使用 var 声明的变量：
	允许重复的变量声明：导致数据被覆盖
	变量提升：怪异的数据访问、闭包问题
	全局变量挂载到全局对象：全局对象成员污染问题
var、let、const的区别
	1、var 定义的变量，没有块的概念，可以跨块访问，不能跨函数访问，有变量提升。
	2、let 定义的变量，只能在块级作用域里访问，不能跨块访问，也不能跨函数访问，无变量提升，不可以重复声明。
	3、const 用来定义常量，使用时必须初始化，只能在块级作用域里访问，而且不能修改，无变量提升，不可以重复声明。



作用域：即变量（变量作用域又称上下文）和函数生效的区域或集合
	即变量和函数生效的区域或集合


