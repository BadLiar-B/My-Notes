HTTP（Hypertext Transfer Protocol）是⼀种⽤于传输超⽂本的应⽤层协议。它是在Web应⽤中⽤于客⼾端和服务器之间进⾏通信的基础协议。HTTP使⽤可靠的TCP/IP连接，通过请求-响应模式来传输数据。

HTTP的主要特点如下：
1. 简单可读性强：HTTP 协议使⽤简单的⽂本格式，易于理解和调试。请求和响应消息都使⽤纯⽂本形式，由报头（Header）和消息主体（Body）组成。
2. ⽆状态协议：HTTP 是⼀种⽆状态协议，每个请求和响应之间是独⽴的，服务器不会保留之前的请求和响应信息。这意味着每个请求都是独⽴的，服务器⽆法⾃动识别两个请求是否来⾃同⼀个客⼾端。
3. ⽀持客⼾端-服务器模型：HTTP 使⽤客⼾端-服务器模型，客⼾端发送请求，服务器进⾏响应。客⼾端可以是 Web 浏览器、移动应⽤或其他应⽤程序，⽽服务器则是存储和处理资源的主机。
4. ⽀持缓存机制：HTTP ⽀持缓存机制，可以在客⼾端或服务器端缓存资源。这样可以减少数据传输和提⾼性能。
5. ⽀持多媒体：HTTP 不仅可以传输 HTML ⽂档，还可以传输其他类型的媒体⽂件，如图⽚、⾳频和视频等。
6. ⽀持安全传输：HTTP 可以通过使⽤ SSL（Secure Socket Layer）或 TLS（Transport LayerSecurity）等加密协议来进⾏安全传输，形成 HTTPS（HTTP Secure）协议。

HTTP 的⼯作流程如下：
1. 客⼾端发送HTTP请求给服务器。请求包括请求⽅法（如 GET、POST）、请求的 URL、请求头部和
可选的请求主体。
2. 服务器接收到请求后，根据请求的 URL 和⽅法执⾏相应的操作，并⽣成 HTTP 响应。
3. 服务器将 HTTP 响应发送回客⼾端。响应包括状态码、响应头部和可选的响应主体。
4. 客⼾端接收到 HTTP 响应后，解析响应数据，并进⾏相应的处理。如果响应中包含 HTML ⽂档或其他资源，客⼾端会进⾏渲染或展⽰。



一、HTTP 和 TCP 的关系：
HTTP 协议是对内容格式的规定，它使用了 TCP 协议完成消息的可靠传输

在具体使用 TCP 协议时：
客户端发消息给服务器叫做请求，服务器发消息给客户端叫做响应
使用 HTTP 协议的服务器不会主动发消息给客户端（尽管 TCP 可以），只对请求进行响应
每一个 HTTP 请求-响应，都要先建立 TCP 连接（三次握手），然后完成请求-响应后，再销毁连接（四次挥手）。这就导致每次请求-响应都是相互独立的，无法保持状态。



二、TCP 的三次握手：（TCP 协议通过三次握手建立可靠的点对点连接）
首先服务器进入监听状态，然后即可处理连接
第一次握手：建立连接时，客户端发送 syn 包到服务器，并进入 SYN_SEND 状态，等待服务器确认。在发送的包中还会包含一个初始序列号 seq。此次握手的含义是客户端希望与服务器建立连接。
SYN：同步序列编号 (Synchronize Sequence Numbers) 
第二次握手：服务器收到 syn 包，然后回应给客户端一个 SYN+ACK 包，此时服务器进入 SYN_RCVD 状态。此次握手的含义是服务端回应客户端，表示已收到并同意客户端的连接请求。
第三次握手：客户端收到服务器的 SYN＋ACK 包，向服务器发送确认 ACK 包，客户端和服务器进入 ESTAB_LISHED 状态（完成状态），完成三次握手
完成三次握手，客户端与服务器开始传送数据




三、TCP 的四次挥手：（需要关闭连接时，需要进行四次挥手才能关闭）
第一次挥手：Client 向 Server 发送 FIN 包，表示 Client 主动要关闭连接，然后进入 FIN_WAIT_1 状态，等待 Server 返回 ACK 包。此后 Client 不能再向 Server 发送数据，但能读取数据。
第二次挥手：Server 收到 FIN 包后向 Client 发送 ACK 包，然后进入 CLOSE_WAIT 状态，此后 Server 不能再读取数据，但可以继续向 Client 发送数据。
Client 收到 Server 返回的 ACK 包后进入 FIN_WAIT_2 状态，等待 Server 发送 FIN 包。
第三次挥手：Server 完成数据的发送后，将 FIN 包发送给 Client，然后进入 LAST_ACK 状态，等待 Client 返回 ACK 包，此后 Server 既不能读取数据，也不能发送数据。
第四次挥手：Client 收到 FIN 包后向 Server 发送 ACK 包，然后进入 TIME_WAIT 状态，接着等待足够长的时间（2MSL）以确保 Server 接收到 ACK 包，最后回到 CLOSED 状态，释放网络资源。完成四次挥手。

