什么是Vite？
	Vite 是新一代前端构建工具，能够显著提升前端开发体验。
	他是使用 rollup 打包你的代码，是开箱即用的，
	同时也提供了丰富的插件api，带来了高度的可扩展性。
	可以构建 vue，react 等项目。


Vite 与 webpack 相比 有什么优点？
1、Vite 服务启动更快
	webpack 打包时必须优先抓取并构建你的整个应用，然后才能提供服务。所以对于大型项目当我们执行 npm run serve 时通常需要几分钟，即使是热更新甚至也需要几秒。
	Vite 通过在一开始将应用中的模块区分为 依赖 和 源码 两类，改进了开发服务器启动时间。依赖使用 ES Module 进行依赖预构建，源码就是我们代码中写的业务组件 .vue， .ts 文件等，是 ES Module 的形式，一方面浏览器可以直接解析 ES Module ，另一方面，我们可以通过动态导入，路由懒加载的方式，只有当路由跳转到对应页面才去加载该页面的资源。

2、Vite服务热更新更快
	在 Vite 中，（HMR） 是在原生 ESM 上执行的。当编辑一个文件时，Vite 只需要精确地使已编辑的模块与其最近的 HMR 边界之间的链失活（大多数时候只是模块本身），使得无论应用大小如何，HMR 始终能保持快速更新。
	Vite 同时利用 HTTP 头来加速整个页面的重新加载（再次让浏览器为我们做更多事情）：源码模块的请求会根据 304 Not Modified 进行协商缓存，而依赖模块请求则会通过 Cache-Control: max-age=31536000,immutable 进行强缓存，因此一旦被缓存它们将不需要再次请求。
	当需要打包到生产环境时，vite 使用传统的 rollup 进行打包，因此 vite 的主要优势在开发阶段。由于 vite 利用的是 ES Module，因此在代码中不可以使用 CommonJS



HMR（Hot Module Replacement）
	是一种开发工具和技术，用于在应用程序运行时替换、添加或删除模块，而无需完全刷新整个页面或重新加载整个应用程序。它是现代前端开发中常用的一项功能。
	HMR 的主要目标是提高开发时的效率和开发体验。通过使用HMR，开发人员可以在进行代码更改时快速看到结果，而无需手动刷新浏览器或重新加载整个应用程序。这对于大型应用程序或具有复杂状态和交互的应用程序特别有用，因为它可以减少开发周期和调试时间。
	HMR 的工作原理是在开发过程中监视文件的变化，并使用模块热替换技术将更新的模块或代码片段注入到运行中的应用程序中。这样，应用程序可以在不中断当前状态或用户操作的情况下保持更新。
	HMR通常与现代的前端框架和构建工具（例如Webpack、Parcel、Rollup等）一起使用，它们提供了对 HMR 的内置支持或插件。通过配置和启用HMR，开发人员可以实现实时更新和快速反馈的开发体验。
























