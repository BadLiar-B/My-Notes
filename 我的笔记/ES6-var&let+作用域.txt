一、var、let、const的区别：
	1、var 定义的变量，没有块的概念，可以跨块访问，不能跨函数访问，有变量提升。
	2、let 定义的变量，只能在块级作用域里访问，不能跨块访问，也不能跨函数访问，无变量提升，不可以重复声明。
	3、const 用来定义常量，使用时必须初始化，只能在块级作用域里访问，而且不能修改，无变量提升，不可以重复声明。

使用 var 声明的变量：
	允许重复的变量声明：导致数据被覆盖
	变量提升：怪异的数据访问、闭包问题
	全局变量挂载到全局对象：全局对象成员污染问题




二、作用域 类型：
在 JavaScript 里面，作用域一共有 4 种：全局作用域，局部作用域、函数作用域以及 eval 作用域。
全局作用域：这个是默认的代码运行环境，一旦代码被载入，引擎最先进入的就是这个环境。
局部作用域：当使用 let 或者 const 声明变量时，这些变量在一对花括号中存在局部作用域，只能够在花括号内部进行访问使用。
函数作用域：当进入到一个函数的时候，就会产生一个函数作用域。函数作用域里面所声明的变量只在函数中提供访问使用。
eval 作用域：当调用 eval( ) 函数的时候，就会产生一个 eval 作用域。

块级作用域详解：
最初在 JavaScript 中作用域有：全局作用域、函数作用域。没有块作用域的概念。
ES6 中新增了块级作用域。块作用域由 { } 包括，if 语句和 for 语句里面的 { } 也属于块作用域。
使用 let 声明的变量或者使用 const 声明的常量，只能在块作用域里访问，不能跨块访问。
在以前没有块作用域的时候，在 if 或者 for 循环中声明的变量会泄露成全局变量，其次就是 { } 中的内层变量可能会覆盖外层变量。块级作用域的出现解决了这些问题。




