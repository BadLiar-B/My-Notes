一、OAuth2.0
是一种开放标准的授权协议，用于在第三方应用程序和服务之间进行安全的认证和授权。
在OAuth2.0中，用户可以通过授权服务器将其身份验证信息与第三方应用程序共享。授权服务器会颁发一个访问令牌，该令牌将用于向资源服务器请求受保护资源。第三方应用程序使用访问令牌来获取用户授权的资源

OAuth2.0的授权过程通常涉及以下几个角色：
用户：资源的所有者，可以授权第三方应用程序访问其资源。
第三方应用程序：需要访问用户资源的应用程序。
授权服务器：负责验证用户身份并颁发访问令牌。
资源服务器：存储和提供受保护资源的服务器。

认证方式：
1、授权码模式（Authorization Code Grant）：在这种模式下，用户通过浏览器将自己的凭证（例如用户名和密码）提供给认证服务器，然后获取一个授权码。授权码随后被用于交换访问令牌和刷新令牌。
2、隐藏模式（Implicit Grant）：这种模式下，用户在浏览器中直接发起认证请求，认证服务器将令牌直接返回给浏览器，然后浏览器将令牌传递给第三方应用程序。第三方应用可以直接在前端页面获取访问令牌，而无需通过后台进行回调。由于前端直接获取token，安全性较低，一般适用于比较信任的网站，并且令牌的有效期，也相对较短，一般是界面关闭及失效
3、密码模式（Resource Owner Password Credentials Grant）：在这种模式下，用户将自己的凭证直接提供给第三方应用程序，然后第三方应用程序使用这些凭证直接向认证服务器请求令牌。
4、客户端模式（Client Credentials Grant）：这种模式下，第三方应用程序直接使用自己的凭证向认证服务器请求令牌，而没有用户的参与。



二、JWT
JWT（JSON Web Token）令牌是一种轻量级的认证和授权机制，它是由一串经过Base64编码的JSON数据组成的令牌。JWT令牌包含了用户的身份信息和权限信息，并且被数字签名以确保其完整性和真实性。
在一般情况下，获取的令牌token并没有实际作用，它只是用来建立信任，使得第三方应用可以调用授权平台的接口。然而，获取用户信息接口通常成为一个瓶颈，因为第三方平台需要获取并保存授权平台的用户基本信息。与普通令牌不同，JWT令牌是通过加密生成的一系列信息，第三方应用可以直接通过JWT令牌获取用户相关信息，无需调用用户基本信息接口，从而减轻了用户信息接口的压力。



三、什么是SSO？与OAuth2.0有什么关系
SSO（Single Sign-On）是一种身份验证和授权机制，它允许用户在一次登录后访问多个相关应用系统而无需再次输入凭证。SSO的目标是提供便捷的用户体验，减少用户的登录负担。
OAuth2.0是一种授权框架，它允许用户授权第三方应用访问其受保护的资源，而无需将用户名和密码直接提供给第三方应用。OAuth2.0的主要目标是授权和保护用户的资源，并确保用户可以控制对其资源的访问权限。
虽然SSO和OAuth2.0有相似的目标，都是为了提供用户便利和安全的身份验证和授权机制，但它们的实现和应用场景有所不同。SSO通常用于组织内部的应用系统，而OAuth2.0更多地用于第三方应用和开放平台之间的授权。虽然OAuth2.0也可以用于实现SSO，但通常需要一个独立的认证授权服务器来处理认证和授权请求链路，以验证用户的登录信息。
简而言之，SSO强调的是一次登录，多个应用系统使用；而OAuth2.0强调的是一次注册，多个应用系统授权访问。尽管OAuth2.0也可以用于实现SSO，但在实际应用中更常见的是将其用于第三方授权的场景。




