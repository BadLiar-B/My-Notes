BFC   块级格式化上下文  Block Formatting Context 

BFC 定义了一个独立的布局区域，让处于 BFC 内部的元素与外部的元素相互隔离，互不干扰，避免他们的布局混乱。

BFC 是由一组规则来定义的，主要包含：
1、块级元素生成的 BFC：
BFC 只有块级元素生成，因为 BFC 是块级元素的一种布局方式 。行内元素和浮动元素不能生成 BFC 
2、边距重叠的问题：
在 BFC 中，相邻块级元素的垂直边距会发生重叠。但是，BFC 内部的元素与外部的元素的垂直边距不会发生重叠。
3、浮动元素的问题：
在 BFC 中，浮动元素会被包裹在 BFC 内部，不会影响到 BFC 外部的元素的布局
4、清除浮动：
在 BFC 中，可以通过清除浮动的方式，解决浮动元素对布局造成的影响


BFC 的原理：主要是通过 css 中的一些属性来实现的
1、display 属性
display 属性可以控制元素生成 BFC。比如，将元素的 display 属性设置为 block、inline-block、table-cell、flex 等值就可以生成 BFC。而 display 属性设置为 inline、table-row、table-column 等值则不能生成 BFC。
2、overflow 属性
overflow 属性可以控制元素生成 BFC。当一个元素的 overflow 属性设置为除了 visible 以外的值时，就可以生成BFC。
3、float 属性
float 属性可以影响元素在 BFC 中的布局。在 BFC 中，浮动元素会被包裹在 BFC 的内部，不会影响到 BFC 外部的元素的布局。
4、clear 属性
clear 属性可以清除浮动元素对布局的影响。比如，将一个元素的 clear 属性设置为 left，就可以清除左浮动元素对布局的影响。
 

BFC 的应用
1、清除浮动
使用 clearfix ：①在浮动元素后添加一个空标签<div class="clear"></div>，并且在CSS中设置 .clear{clear:both;}
	②给浮动元素的容器添加一个 clearfix 的 class，然后给这个 class 添加一个 :after 伪元素实现元素之后添加一个看不见的块元素（Block element）清理浮动。
		.clearfix::after{
			content:"";
			display:block;
			clear:both;
			}
使用 BFC ：设置父元素的 overflow 属性为 非 visible 实现
2、解决边距重叠的问题
一种常见的做法是在父元素中创建一个 BFC：将父元素的 overflow 属性设置为hidden
3、实现两栏布局
可以使用 float 属性将左栏浮动，然后在右栏中创建一个 BFC，以避免左栏的浮动影响到右栏的布局。





面试题：为什么会出现浮动和什么时候需要清除浮动？清除浮动的方式？
浮动元素碰到包含它的边框或者浮动元素的边框停留。由于浮动元素不在文档流中，所以文档流的块框表现得就像浮动框不存在一样。浮动元素会漂浮在文档流的块框上。

浮动带来的问题：
1、父元素的高度无法被撑开，影响与父元素同级的元素
2、与浮动元素同级的非浮动元素（内联元素）会跟随其后
3、若非第一个元素浮动，则该元素之前的元素也需要浮动，否则会影响页面显示的结构。

清除浮动的方式：
1、父级 div 定义 height
2、最后一个浮动元素后加空 div 标签 并添加样式 clear:both。
3、包含浮动元素的父标签添加样式 overflow 为 hidden 或 auto。
4、父级 div 定义 zoom（在 CSS3 规范中已被废弃）（推荐使用 CSS3 的 transform 属性中的 scale 函数来实现元素的缩放效果： transform: scale(1.2); /* 缩放比例为 120% */）





